# name of your pipeline
name: CI

# define some actions filters, when this build should be triggered
# here it is only triggered if a push is made on the master branch
on:
  push:
    branches:
      - main

# define env vars
# env:
#   APP_NAME: name-of-your-app

jobs:
# TODO: implement this in the future: check which files have changed in the last push
  # run build, but only if requirements.txt has changed
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build base image
        run: make build
      - name: Build dev image
        run: make build-dev
      - name: Test app
        run: make dockerized-test
        env:
          PG_DB_NAME: ${{ secrets.PG_DB_NAME }}
          PG_HOST_NAME: ${{ secrets.PG_HOST_NAME }}
          PG_PORT: ${{ secrets.PG_PORT }}
          PG_USER_NAME: ${{ secrets.PG_USER_NAME }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Push to Heroku container registry
        run: |
          docker tag project-watertemp registry.heroku.com/water-temp/web
          docker push registry.heroku.com/water-temp/web
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a water-temp web
